[workspace]
resolver = "2"
members = [
    # "client",
    "core",
    "database",
    "http/server",
    "macros",
    "nexus",
    "rpc/client",
    "rpc/core",
    "rpc/server",
    "sparkled",
    # "wasm",
]
# default-members = ["client","sparkled"]
default-members = ["sparkled"]


[workspace.package]
rust-version = "1.79.0"
version = "0.0.1"
authors = ["Sparkle Developers"]
license = "Apache-2.0 OR MIT"
edition = "2021"
repository = "https://github.com/aspectron/sparkle"
include = [
    "src/**/*.rs",
    "build.rs",
    "Cargo.toml",
    "Cargo.lock",
]

[workspace.dependencies]

sparkle-rs = { path = "client" }
sparkle-core = { path = "core" }
sparkle-database = { path = "database" }
sparkle-nexus = { path = "nexus" }
sparkle-http-server = { path = "http/server" }
sparkle-rpc-core = { path = "rpc/core" }
sparkle-rpc-client = { path = "rpc/client" }
sparkle-rpc-server = { path = "rpc/server" }
sparkled = { path = "sparkled" }
sparkle-wasm = { path = "wasm" }
sparkle-macros = { path = "macros" }

# _______________________________________________________
#  ____ _  _ ____ ___ _   _    _  _ ____ ____ ___  ____ 
#  |__/ |  | [__   |   \_/  __ |_/  |__| [__  |__] |__| 
#  |  \ |__| ___]  |    |      | \_ |  | ___] |    |  | 
# _______________________________________________________

# kaspa-addresses = "0.13.4"
# kaspa-bip32 = "0.13.4"
# kaspa-consensus-core = "0.13.4"
# kaspa-consensus-client = "0.13.4"
# kaspa-consensus-wasm = "0.13.4"
# kaspa-hashes = "0.13.4"
# kaspa-notify = "0.13.4"
# kaspa-rpc-core = "0.13.4"
# kaspa-utils = "0.13.4"
# kaspa-wallet-core = "0.13.4"
# kaspa-wallet-keys = "0.13.4"
# kaspa-wasm = "0.13.4"
# kaspa-wasm-core = "0.13.4"
# kaspa-wrpc-client = "0.13.4"
# kaspa-wrpc-wasm = "0.13.4"

# kaspa-addresses = { path = "../rusty-kaspa/crypto/addresses" }
# kaspa-bip32 = { path = "../rusty-kaspa/wallet/bip32" }
# kaspa-consensus-core = { path = "../rusty-kaspa/consensus/core" }
# kaspa-consensus-client = { path = "../rusty-kaspa/consensus/client" }
# kaspa-consensus-wasm = { path = "../rusty-kaspa/consensus/wasm" }
# kaspa-hashes = { path = "../rusty-kaspa/crypto/hashes" }
# kaspa-notify = { path = "../rusty-kaspa/notify" }
# kaspa-rpc-core = { path = "../rusty-kaspa/rpc/core" }
# kaspa-txscript = { path = "../rusty-kaspa/crypto/txscript" }
# kaspa-txscript-errors = { path = "../rusty-kaspa/crypto/txscript/errors" }
# kaspa-utils = { path = "../rusty-kaspa/utils" }
# kaspa-wallet-core = { path = "../rusty-kaspa/wallet/core" }
# kaspa-wallet-keys = { path = "../rusty-kaspa/wallet/keys" }
# kaspa-wasm = { path = "../rusty-kaspa/wasm" }
# kaspa-wasm-core = { path = "../rusty-kaspa/wasm/core" }
# kaspa-wrpc-client = { path = "../rusty-kaspa/rpc/wrpc/client" }
# kaspa-wrpc-wasm = { path = "../rusty-kaspa/rpc/wrpc/wasm" }

kaspa-addresses = { git = "https://github.com/aspectron/rusty-kaspa.git", branch = "omega" }
kaspa-bip32 = { git = "https://github.com/aspectron/rusty-kaspa.git", branch = "omega" }
kaspa-consensus-core = { git = "https://github.com/aspectron/rusty-kaspa.git", branch = "omega" }
kaspa-consensus-client = { git = "https://github.com/aspectron/rusty-kaspa.git", branch = "omega" }
kaspa-consensus-wasm = { git = "https://github.com/aspectron/rusty-kaspa.git", branch = "omega" }
kaspa-hashes = { git = "https://github.com/aspectron/rusty-kaspa.git", branch = "omega" }
kaspa-notify = { git = "https://github.com/aspectron/rusty-kaspa.git", branch = "omega" }
kaspa-rpc-core = { git = "https://github.com/aspectron/rusty-kaspa.git", branch = "omega" }
kaspa-txscript = { git = "https://github.com/aspectron/rusty-kaspa.git", branch = "omega" }
kaspa-txscript-errors = { git = "https://github.com/aspectron/rusty-kaspa.git", branch = "omega" }
kaspa-utils = { git = "https://github.com/aspectron/rusty-kaspa.git", branch = "omega" }
kaspa-wallet-keys = { git = "https://github.com/aspectron/rusty-kaspa.git", branch = "omega" }
kaspa-wasm = { git = "https://github.com/aspectron/rusty-kaspa.git", branch = "omega" }
kaspa-wasm-core = { git = "https://github.com/aspectron/rusty-kaspa.git", branch = "omega" }
kaspa-wrpc-client = { git = "https://github.com/aspectron/rusty-kaspa.git", branch = "omega" }
kaspa-wrpc-wasm = { git = "https://github.com/aspectron/rusty-kaspa.git", branch = "omega" }
# ---
kaspa-wallet-core = { git = "https://github.com/aspectron/rusty-kaspa.git", branch = "omega" }
# ---

# _________________________________________________________
#  _ _ _ ____ ____ _  _ ____ _    ____ _ _ _    ____ ____ 
#  | | | |  | |__/ |_/  |___ |    |  | | | | __ |__/ [__  
#  |_|_| |__| |  \ | \_ |    |___ |__| |_|_|    |  \ ___] 
# _________________________________________________________

workflow-core = "0.17.0"
workflow-http = "0.17.0"
workflow-log = "0.17.0"
workflow-wasm = "0.17.0"
workflow-rpc = "0.17.0"
workflow-serializer = "0.17.0"

# workflow-core = { path = "../workflow-rs/core" }
# workflow-http = { path = "../workflow-rs/http" }
# workflow-log = { path = "../workflow-rs/log" }
# workflow-wasm = { path = "../workflow-rs/wasm" }
# workflow-rpc = { path = "../workflow-rs/rpc" }
# workflow-serializer = { path = "../workflow-rs/serializer" }

# workflow-core = {  git = "https://github.com/workflow-rs/workflow-rs.git", branch = "master", features = ["no-unsafe-eval"] }
# workflow-http = { git = "https://github.com/workflow-rs/workflow-rs.git", branch = "master" }
# workflow-log = { git = "https://github.com/workflow-rs/workflow-rs.git", branch = "master" }
# workflow-wasm = { git = "https://github.com/workflow-rs/workflow-rs.git", branch = "master" }
# workflow-rpc = { git = "https://github.com/workflow-rs/workflow-rs.git", branch = "master" }
# workflow-serializer = { git = "https://github.com/workflow-rs/workflow-rs.git", branch = "master" }

# ----------------------------------------
# ----------------------------------------
# ----------------------------------------

ahash = "0.8.6"
async-std = { version = "1.12.0", features = ['attributes'] }
async-trait = "0.1.74"
axum = "0.7.4"
base64 = "0.22.1"
bincode = "1.3.3"
borsh = { version = "1.5.1", features = ["rc"] }
bs58 = { version = "0.5.0", features = ["check"], default-features = false }
cfg-if = "1.0.0"
# chromiumoxide = { version = "0.5.7", features = ["tokio-runtime", "_fetcher-native-tokio"], default-features = false }
chrono = "0.4.31"
clap = { version = "4.4.7", features = ["derive", "string", "cargo"] }
cliclack = "0.3.1"
console = "0.15.8"
convert_case = "0.6.0"
ctrlc = "3.4.1"
dirs = "5.0.1"
downcast-rs = "1.2.0"
enum-primitive-derive = "0.3.0"
env_logger = "0.11.3"
evm = "0.41.1"
faster-hex = "0.9.0"
futures = "0.3.29"
futures-util = { version = "0.3.29", default-features = false, features = ["alloc"] }
hex = { version = "0.4.3", features = ["serde"] }
hex-literal = "0.4.1"
itertools = "0.13.0"
indexmap = "2.2.6"
js-sys = "0.3.67"
log = "0.4.20"
mail-send = "0.4.7"
mime = "0.3.16"
mime_guess = "2.0.4"
mini-moka = "=0.10.3"
num = "0.4.1"
num_cpus = "1.16.0"
num-traits = "0.2.17"
once_cell = "1.19.0"
pad = "0.1.6"
parking_lot = "0.12.1"
primitive-types = "0.12.2"
qrcode = "0.14.0"
rand = "0.8.5"
recurly = "48.0.0"
regex = "1.10.2"
reqwest = {version = "0.12.4", features = ["json"] }
rpassword = "7.3.1" # might be not needed
rocksdb = "0.22.0"
secp256k1 = { version = "0.29.0", features = [
    "global-context",
    "rand-std",
    "serde",
] }
separator = "0.4.1"
serde = { version = "1.0.190", features = ["derive", "rc"] }
serde_json = "1.0.107"
serde_with = "3.8.1"
serde-wasm-bindgen = "0.6.5"
sha2 = "0.10.8"
smallvec = { version = "1.11.1", features = ["serde"] }
tempfile = "3.10.1"
thiserror = "1.0.50"
tokio = { version = "1.33.0", features = ["full"] }
toml = "0.8.8"
tower = { version = "0.4.13", features = ["buffer","limit"] }
tower-http = { version = "0.5.1", features = ["cors","timeout","trace"] }
tracing-subscriber = "0.3.18"
wasm-bindgen = { version = "0.2.92", features = ["serde-serialize"] }
wasm-bindgen-futures = "0.4.40"
wasm-bindgen-test = "0.3.37"
web-sys = "0.3.67"


# [target.'cfg(target_arch = "wasm32")'.dependencies]
# kaspa-wasm = { path = "../rusty-kaspa/wasm" }

# [target.'cfg(not(target_arch = "wasm32"))'.dependencies]
# tokio = { version = "1", features = ["sync", "rt-multi-thread", "process"] }




[profile.release]
opt-level = 2
# opt-level = 3
# lto = true

[profile.native-release]
inherits = "release"
opt-level = 3
lto = true
# strip = true
